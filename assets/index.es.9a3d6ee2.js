import{r as e,a as t,N as r,l as a,H as n,m as s,u as i,n as l}from"./vendor.ebdf39b9.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const r of e)if("childList"===r.type)for(const e of r.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var o=Object.defineProperty,c=Object.defineProperties,u=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,f=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,b=(e,t)=>{for(var r in t||(t={}))d.call(t,r)&&f(e,r,t[r]);if(p)for(var r of p(t))h.call(t,r)&&f(e,r,t[r]);return e},m=(e,t)=>c(e,u(t));const g=({operator:r,value:a,handleOnChange:n,title:s,className:i,type:l,inputType:o,values:c,fieldData:u,disabled:p,testID:d})=>{var h;if(e.exports.useEffect((()=>{"number"===o&&!["between","notBetween","in","notIn"].includes(r)&&"string"==typeof a&&a.includes(",")&&n("")}),[n,o,r,a]),"null"===r||"notNull"===r)return null;const f=null!=(h=null==u?void 0:u.placeholder)?h:"",b=["between","notBetween","in","notIn"].includes(r)?"text":o||"text";switch(l){case"select":return t.createElement("select",{"data-testid":d,className:i,title:s,onChange:e=>n(e.target.value),disabled:p,value:a},c&&c.map((e=>t.createElement("option",{key:e.name,value:e.name},e.label))));case"checkbox":return t.createElement("input",{"data-testid":d,type:"checkbox",className:i,title:s,onChange:e=>n(e.target.checked),checked:!!a,disabled:p});case"radio":return t.createElement("span",{"data-testid":d,className:i,title:s},c&&c.map((e=>t.createElement("label",{key:e.name},t.createElement("input",{type:"radio",value:e.name,disabled:p,checked:a===e.name,onChange:e=>n(e.target.value)}),e.label))));default:return t.createElement("input",{"data-testid":d,type:b,placeholder:f,value:a,title:s,className:i,disabled:p,onChange:e=>n(e.target.value)})}};g.displayName="ValueEditor";const y=({className:e,handleOnChange:r,options:a,title:n,value:s,disabled:i,testID:l})=>t.createElement("select",{"data-testid":l,className:e,value:s,title:n,disabled:i,onChange:e=>r(e.target.value)},a.map((e=>{var r;const a=`key-${null!=(r=e.id)?r:e.name}`;return t.createElement("option",{key:a,value:e.name},e.label)})));y.displayName="ValueSelector";const v=({className:e,handleOnClick:r,label:a,title:n,disabled:s,testID:i})=>t.createElement("button",{"data-testid":i,disabled:s,className:e,title:n,onClick:e=>r(e)},a);v.displayName="ActionElement";const E=({className:e,handleOnChange:r,title:a,label:n,checked:s,disabled:i,testID:l})=>t.createElement("label",{"data-testid":l,className:e,title:a},t.createElement("input",{type:"checkbox",onChange:e=>r(e.target.checked),checked:!!s,disabled:i}),n);E.displayName="NotToggle";const $=e.exports.forwardRef((({className:e,label:r,title:a,testID:n},s)=>t.createElement("span",{"data-testid":n,ref:s,className:e,title:a},r)));$.displayName="DragHandle";var _=(...e)=>e.join(" ").trim();const O=e=>{const t={},r=e=>{const a=[];if(0===e.rules.length)a.push(oe.empty);else if(!("combinator"in e)){let t=!1;for(let r=0;r<e.rules.length&&!t;r++)(r%2==0&&"string"==typeof e.rules[r]||r%2==1&&"string"!=typeof e.rules[r]||r%2==1&&"string"==typeof e.rules[r]&&!ne.map((e=>e.name)).includes(e.rules[r]))&&(t=!0);t&&a.push(oe.invalidIndependentCombinators)}"combinator"in e&&!ne.map((e=>e.name)).includes(e.combinator)&&e.rules.length>=2&&a.push(oe.invalidCombinator),e.id&&(a.length?t[e.id]={valid:!1,reasons:a}:t[e.id]=!0),e.rules.forEach((e=>{"string"==typeof e||"rules"in e&&r(e)}))};return r(e),t},R=(e,t)=>{if(0===e.length)return t;let r=t;for(let a=0;a<e.length&&r&&"rules"in r;a++){const t=r.rules[e[a]];r="string"!=typeof t?t:null}return r},N=e=>"object"==typeof e&&null!==e&&"boolean"==typeof e.valid,I=(e,t,r)=>{if("boolean"==typeof t)return t;if(N(t))return t.valid;if("function"==typeof r&&!("rules"in e)){const t=r(e);if("boolean"==typeof t)return t;if(N(t))return t.valid}return!0},k=e=>{const t=new Set,r=[];return e.forEach((e=>{t.has(e.name)||(t.add(e.name),r.push(e))})),r},S=e=>Array.isArray(e)?e:"string"==typeof e?e.split(","):[],x={"=":"$eq","!=":"$ne","<":"$lt","<=":"$lte",">":"$gt",">=":"$gte",in:"$in",notIn:"$nin"},C=(e,t,r)=>{const a=t.toLowerCase();if("null"===a||"notnull"===a)return"";if("in"===a||"notin"===a){const e=S(r);return e.length>0?`(${e.map((e=>`'${e.trim()}'`)).join(", ")})`:""}if("between"===a||"notbetween"===a){const e=S(r);if(e.length>=2&&e[0]&&e[1]){const[t,r]=e;return`'${t.trim()}' and '${r.trim()}'`}return""}return"contains"===a||"doesnotcontain"===a?`'%${r}%'`:"beginswith"===a||"doesnotbeginwith"===a?`'${r}%'`:"endswith"===a||"doesnotendwith"===a?`'%${r}'`:"boolean"==typeof r?`${r}`.toUpperCase():`'${r}'`},A=(e,t,r)=>{const a=x[t];if(["<","<=","=","!=",">",">="].includes(t))return`{"${a}":${"boolean"==typeof r?r:`"${r}"`}}`;if(["between","notBetween"].includes(t))return"boolean"==typeof r?`${r}`:`"${r}"`;if("contains"===t)return`{"$regex":"${r}"}`;if("beginsWith"===t)return`{"$regex":"^${r}"}`;if("endsWith"===t)return`{"$regex":"${r}$"}`;if("doesNotContain"===t)return`{"$not":{"$regex":"${r}"}}`;if("doesNotBeginWith"===t)return`{"$not":{"$regex":"^${r}"}}`;if("doesNotEndWith"===t)return`{"$not":{"$regex":"${r}$"}}`;if("null"===t)return"null";if("notNull"===t)return'{"$ne":null}';if("in"===t||"notIn"===t){const e=S(r);return e.length?`{"${a}":[${e.map((e=>`"${e.trim()}"`))}]}`:""}return""};function T(e,t){var r,a,n,s,i,l,o;let c="json",u=C,p="",d=()=>!0,h=[],f={},b="",m=":";if("object"==typeof t&&null!==t?(c=(null!=(r=t.format)?r:"json").toLowerCase(),u=null!=(a=t.valueProcessor)?a:"mongodb"===c?A:C,p=null!=(n=t.quoteFieldNamesWith)?n:"",d=null!=(s=t.validator)?s:()=>!0,h=null!=(i=t.fields)?i:[],b=null!=(l=t.fallbackExpression)?l:"",m=null!=(o=t.paramPrefix)?o:":"):"string"==typeof t&&(c=t.toLowerCase(),"mongodb"===c&&(u=A)),b||("sql"===c||"parameterized"===c||"parameterized_named"===c?b="(1 = 1)":"mongodb"===c&&(b='"$and":[{"$expr":true}]')),"json"===c)return JSON.stringify(e,null,2);if("json_without_ids"===c)return JSON.stringify(e,["rules","field","value","operator","combinator","not"]);if("sql"===c||"parameterized"===c||"parameterized_named"===c){const t="parameterized"===c,r="parameterized_named"===c,a=[],n={},s={},i=e=>{var t;return s[e]=(null!=(t=s[e])?t:0)+1,`${e}_${s[e]}`};if("function"==typeof d){const a=d(e);if("boolean"==typeof a){if(!1===a)return t?{sql:b,params:[]}:r?{sql:b,params:{}}:b}else f=a}const l={};k(h).forEach((e=>{"function"==typeof e.validator&&(l[e.name]=e.validator)}));const o=e=>{let s,l;if(e.id&&(s=f[e.id]),h.length){const t=h.filter((t=>t.name===e.field));if(t.length){const e=t[0];"function"==typeof e.validator&&(l=e.validator)}}if(!I(e,s,l))return"";const o=u(e.field,e.operator,e.value),c=(e=>{switch(e.toLowerCase()){case"null":return"is null";case"notnull":return"is not null";case"notin":return"not in";case"notbetween":return"not between";case"contains":case"beginswith":case"endswith":return"like";case"doesnotcontain":case"doesnotbeginwith":case"doesnotendwith":return"not like";default:return e}})(e.operator);if(t||r){if("is null"===c.toLowerCase()||"is not null"===c.toLowerCase())return`${p}${e.field}${p} ${c}`;if("in"===c.toLowerCase()||"not in"===c.toLowerCase()){if(o){const r=e.value.split(",").map((e=>e.trim()));if(t)return r.forEach((e=>a.push(e))),`${p}${e.field}${p} ${c} (${r.map((()=>"?")).join(", ")})`;const s=[];return r.forEach((t=>{const r=i(e.field);s.push(`${m}${r}`),n[r]=t})),`${p}${e.field}${p} ${c} (${s.join(", ")})`}return""}if("between"===c.toLowerCase()||"not between"===c.toLowerCase()){if(o){const[r,s]=S(e.value).map((e=>e.trim()));if(t)return a.push(r),a.push(s),`${p}${e.field}${p} ${c} ? and ?`;const l=i(e.field),o=i(e.field);return n[l]=r,n[o]=s,`${p}${e.field}${p} ${c} ${m}${l} and ${m}${o}`}return""}const r=["boolean","number"].includes(typeof e.value)?e.value:o.match(/^'?(.*?)'?$/)[1];let s="";return t?a.push(r):(s=i(e.field),n[s]=r),`${p}${e.field}${p} ${c} ${t?"?":`${m}${s}`}`.trim()}return["in","not in","between","not between"].includes(c.toLowerCase())&&!o?"":`${p}${e.field}${p} ${c} ${o}`.trim()},g=(e,t)=>{var r;if(!I(e,f[null!=(r=e.id)?r:""]))return t?b:"";const a=e.rules.map((e=>"string"==typeof e?e:"rules"in e?g(e):o(e)));return 0===a.length?b:`${e.not?"NOT ":""}(${a.filter((e=>!!e)).join("combinator"in e?` ${e.combinator} `:" ")})`};return t?{sql:g(e,!0),params:a}:r?{sql:g(e,!0),params:n}:g(e,!0)}if("mongodb"===c){if("function"==typeof d){const t=d(e);if("boolean"==typeof t){if(!1===t)return`{${b}}`}else f=t}const t=(e,r)=>{var a;if(!I(e,f[null!=(a=e.id)?a:""]))return r?b:"";const n=`"$${e.combinator}"`,s=e.rules.map((e=>{if("rules"in e){const r=t(e);return r?`{${r}}`:""}{const t=u(e.field,e.operator,e.value);if(["<","<=","=","!=",">",">=","contains","beginsWith","endsWith","doesNotContain","doesNotBeginWith","doesNotEndWith","null","notNull"].includes(e.operator)||("in"===e.operator||"notIn"===e.operator)&&e.value)return`{"${e.field}":${t}}`;if("between"===e.operator||"notBetween"===e.operator){const t=S(e.value);if(t.length>=2&&t[0]&&t[1]){const[r,a]=t,n=u(e.field,e.operator,"string"==typeof r?r.trim():r),s=u(e.field,e.operator,"string"==typeof a?a.trim():a);return"between"===e.operator?`{"$and":[{"${e.field}":{"$gte":${n}}},{"${e.field}":{"$lte":${s}}}]}`:`{"$or":[{"${e.field}":{"$lt":${n}}},{"${e.field}":{"$gt":${s}}}]}`}return""}}return""})).filter((e=>!!e)).join(",");return s?`${n}:[${s}]`:b};return"combinator"in e?`{${t(e,!0)}}`:`{${b}}`}return""}const L=()=>Math.random().toString(),w=e=>{const t="boolean"==typeof e?e:"object"==typeof e&&null!==e?e.valid:null;return"boolean"==typeof t?t?se.valid:se.invalid:""},D=e=>{const t=e;return t&&Array.isArray(t.rules)};var G=function(){var e=function(e,t,r,a){for(r=r||{},a=e.length;a--;r[e[a]]=t);return r},t=[1,8],r=[1,4],a=[2,4],n=[1,11],s=[1,10],i=[2,16],l=[1,14],o=[1,15],c=[1,16],u=[6,8],p=[2,146],d=[1,19],h=[1,20],f=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],b=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],m=[2,160],g=[1,29],y=[6,8,14,17,146,150,152,154],v=[1,42],E=[1,60],$=[1,52],_=[1,59],O=[1,61],R=[1,62],N=[1,63],I=[1,64],k=[1,65],S=[1,58],x=[1,53],C=[1,54],A=[1,55],T=[1,56],L=[1,57],w=[1,43],D=[1,44],G=[1,45],P=[1,34],B=[1,66],H=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],U=[6,8,14,17,150,152,154],M=[2,143],F=[1,75],W=[1,76],j=[6,8,14,17,43,133,138,144,146,150,152,154],q=[1,81],Q=[1,78],z=[1,79],J=[1,80],X=[1,82],V=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,107,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Y=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,107,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],K=[1,103],Z=[1,101],ee=[1,102],te=[1,97],re=[1,98],ae=[1,99],ne=[1,100],se=[1,104],ie=[1,105],le=[1,106],oe=[1,107],ce=[1,108],ue=[1,109],pe=[2,103],de=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],he=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],fe=[1,110],be=[1,117],me=[2,64],ge=[1,118],ye=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],ve=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,119,195],Ee=[1,164],$e=[17,43],_e=[2,59],Oe=[1,173],Re=[1,171],Ne=[1,172],Ie=[6,8,138,146],ke=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],Se=[6,8,14,17,138,144,146,150,152,154],xe=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Ce=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Ae=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Te=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],Le=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],we=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],De=[71,74,77],Ge=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],Pe=[1,233],Be=[1,234],He=[6,8,14,17],Ue=[6,8,14,17,43,157],Me=[1,251],Fe=[1,247],We=[2,197],je=[1,255],qe=[1,256],Qe=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],ze=[1,258],Je=[1,261],Xe=[1,262],Ve=[1,263],Ye=[1,264],Ke=[2,174],Ze=[1,260],et=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],tt=[6,8,14,17,135,138,144,146,150,152,154],rt=[1,276],at=[2,179],nt=[170,173],st=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],it=[2,199],lt=[1,281],ot=[1,293],ct=[1,301],ut=[1,302],pt=[1,303],dt=[6,8,14,17,138,146,150,152,154],ht=[1,313],ft=[1,319],bt=[1,320],mt=[2,204],gt=[1,331],yt=[16,152],vt=[6,8,14,17,152,154],Et=[1,347],$t={trace:function(){},yy:{},symbols_:{error:2,main:3,selectClause:4,semicolonOpt:5,EOF:6,unionClause:7,";":8,unionClauseNotParenthesized:9,unionClauseParenthesized:10,order_by_opt:11,limit_opt:12,selectClauseParenthesized:13,UNION:14,distinctOpt:15,"(":16,")":17,SELECT:18,highPriorityOpt:19,maxStateMentTimeOpt:20,straightJoinOpt:21,sqlSmallResultOpt:22,sqlBigResultOpt:23,sqlBufferResultOpt:24,sqlCacheOpt:25,sqlCalcFoundRowsOpt:26,selectExprList:27,selectDataSetOpt:28,ALL:29,DISTINCT:30,DISTINCTROW:31,HIGH_PRIORITY:32,MAX_STATEMENT_TIME:33,"=":34,NUMERIC:35,STRAIGHT_JOIN:36,SQL_SMALL_RESULT:37,SQL_BIG_RESULT:38,SQL_BUFFER_RESULT:39,SQL_CACHE:40,SQL_NO_CACHE:41,SQL_CALC_FOUND_ROWS:42,",":43,selectExpr:44,"*":45,SELECT_EXPR_STAR:46,expr:47,selectExprAliasOpt:48,AS:49,IDENTIFIER:50,STRING:51,string:52,number:53,EXPONENT_NUMERIC:54,HEX_NUMERIC:55,boolean:56,TRUE:57,FALSE:58,null:59,NULL:60,literal:61,place_holder:62,function_call:63,function_call_param_list:64,function_call_param:65,identifier:66,DOT:67,identifier_list:68,case_expr_opt:69,when_then_list:70,WHEN:71,THEN:72,case_when_else:73,ELSE:74,case_when:75,CASE:76,END:77,simple_expr_prefix:78,"+":79,simple_expr:80,"-":81,"~":82,"!":83,BINARY:84,expr_list:85,ROW:86,EXISTS:87,"{":88,"}":89,bit_expr:90,"|":91,"&":92,"<<":93,">>":94,"/":95,DIV:96,MOD:97,"%":98,"^":99,not_opt:100,NOT:101,escape_opt:102,ESCAPE:103,predicate:104,IN:105,BETWEEN:106,AND:107,SOUNDS:108,LIKE:109,REGEXP:110,comparison_operator:111,">=":112,">":113,"<=":114,"<":115,"<>":116,"!=":117,sub_query_data_set_opt:118,ANY:119,boolean_primary:120,IS:121,boolean_extra:122,UNKNOWN:123,"&&":124,"||":125,OR:126,XOR:127,where_opt:128,WHERE:129,group_by_opt:130,group_by:131,roll_up_opt:132,WITH:133,ROLLUP:134,GROUP_BY:135,group_by_order_by_item_list:136,order_by:137,ORDER_BY:138,group_by_order_by_item:139,sort_opt:140,ASC:141,DESC:142,having_opt:143,HAVING:144,limit:145,LIMIT:146,OFFSET:147,procedure_opt:148,procedure:149,PROCEDURE:150,for_update_lock_in_share_mode_opt:151,FOR:152,UPDATE:153,LOCK:154,SHARE:155,MODE:156,FROM:157,table_references:158,partitionOpt:159,escaped_table_reference:160,table_reference:161,OJ:162,join_inner_cross:163,INNER:164,CROSS:165,left_right:166,LEFT:167,RIGHT:168,out_opt:169,OUTER:170,left_right_out_opt:171,join_table:172,JOIN:173,table_factor:174,join_condition:175,on_join_condition:176,NATURAL:177,join_condition_opt:178,ON:179,USING:180,partition_names:181,PARTITION:182,aliasOpt:183,index_or_key:184,INDEX:185,KEY:186,for_opt:187,identifier_list_opt:188,index_hint_list_opt:189,index_hint_list:190,index_hint:191,USE:192,IGNORE:193,FORCE:194,PLACE_HOLDER:195,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",8:";",14:"UNION",16:"(",17:")",18:"SELECT",29:"ALL",30:"DISTINCT",31:"DISTINCTROW",32:"HIGH_PRIORITY",33:"MAX_STATEMENT_TIME",34:"=",35:"NUMERIC",36:"STRAIGHT_JOIN",37:"SQL_SMALL_RESULT",38:"SQL_BIG_RESULT",39:"SQL_BUFFER_RESULT",40:"SQL_CACHE",41:"SQL_NO_CACHE",42:"SQL_CALC_FOUND_ROWS",43:",",45:"*",46:"SELECT_EXPR_STAR",49:"AS",50:"IDENTIFIER",51:"STRING",54:"EXPONENT_NUMERIC",55:"HEX_NUMERIC",57:"TRUE",58:"FALSE",60:"NULL",67:"DOT",71:"WHEN",72:"THEN",74:"ELSE",76:"CASE",77:"END",79:"+",81:"-",82:"~",83:"!",84:"BINARY",86:"ROW",87:"EXISTS",88:"{",89:"}",91:"|",92:"&",93:"<<",94:">>",95:"/",96:"DIV",97:"MOD",98:"%",99:"^",101:"NOT",103:"ESCAPE",105:"IN",106:"BETWEEN",107:"AND",108:"SOUNDS",109:"LIKE",110:"REGEXP",112:">=",113:">",114:"<=",115:"<",116:"<>",117:"!=",119:"ANY",121:"IS",123:"UNKNOWN",124:"&&",125:"||",126:"OR",127:"XOR",129:"WHERE",133:"WITH",134:"ROLLUP",135:"GROUP_BY",138:"ORDER_BY",141:"ASC",142:"DESC",144:"HAVING",146:"LIMIT",147:"OFFSET",150:"PROCEDURE",152:"FOR",153:"UPDATE",154:"LOCK",155:"SHARE",156:"MODE",157:"FROM",162:"OJ",164:"INNER",165:"CROSS",167:"LEFT",168:"RIGHT",170:"OUTER",173:"JOIN",177:"NATURAL",179:"ON",180:"USING",182:"PARTITION",185:"INDEX",186:"KEY",192:"USE",193:"IGNORE",194:"FORCE",195:"PLACE_HOLDER"},productions_:[0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[90,1],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[100,0],[100,1],[102,0],[102,2],[104,1],[104,6],[104,6],[104,6],[104,4],[104,5],[104,4],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[118,1],[118,1],[120,1],[120,4],[120,3],[120,6],[122,1],[122,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[62,1]],performAction:function(e,t,r,a,n,s,i){var l=s.length-1;switch(n){case 1:case 2:return{nodeType:"Main",value:s[l-2],hasSemicolon:s[l-1]};case 3:case 144:this.$=!0;break;case 4:this.$=!1;break;case 5:case 13:case 14:case 15:case 17:case 19:case 21:case 23:case 25:case 27:case 30:case 31:case 32:case 51:case 52:case 53:case 54:case 55:case 60:case 61:case 63:case 69:case 73:case 80:case 81:case 82:case 83:case 89:case 90:case 104:case 106:case 107:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:case 123:case 127:case 129:case 140:case 142:case 147:case 153:case 154:case 156:case 161:case 163:case 164:case 175:case 176:case 177:case 178:case 180:case 189:case 191:case 193:case 194:case 202:case 203:case 209:case 211:this.$=s[l];break;case 6:this.$=s[l-2],this.$.orderBy=s[l-1],this.$.limit=s[l];break;case 7:case 8:case 10:case 11:this.$={type:"Union",left:s[l-3],distinctOpt:s[l-1],right:s[l]};break;case 9:this.$={type:"SelectParenthesized",value:s[l-1]};break;case 12:this.$={type:"Select",distinctOpt:s[l-10],highPriorityOpt:s[l-9],maxStateMentTimeOpt:s[l-8],straightJoinOpt:s[l-7],sqlSmallResultOpt:s[l-6],sqlBigResultOpt:s[l-5],sqlBufferResultOpt:s[l-4],sqlCacheOpt:s[l-3],sqlCalcFoundRowsOpt:s[l-2],selectItems:s[l-1],from:s[l].from,partition:s[l].partition,where:s[l].where,groupBy:s[l].groupBy,having:s[l].having,orderBy:s[l].orderBy,limit:s[l].limit,procedure:s[l].procedure,updateLockMode:s[l].updateLockMode};break;case 16:case 18:case 20:case 22:case 24:case 26:case 28:case 29:case 33:case 59:case 68:case 72:case 103:case 105:case 139:case 141:case 143:case 146:case 152:case 155:case 160:case 162:case 165:case 174:case 179:case 188:case 197:case 204:case 208:case 210:this.$=null;break;case 34:s[l-2].value.push(s[l]);break;case 35:this.$={type:"SelectExpr",value:[s[l]]};break;case 36:case 37:case 64:this.$={type:"Identifier",value:s[l]};break;case 38:this.$=s[l-1],this.$.alias=s[l].alias,this.$.hasAs=s[l].hasAs;break;case 39:case 199:this.$={alias:null,hasAs:null};break;case 40:case 42:this.$={alias:s[l],hasAs:!0};break;case 41:this.$={alias:s[l],hasAs:!1};break;case 43:this.$={alias:s[$01],hasAs:!1};break;case 44:this.$={type:"String",value:s[l]};break;case 45:case 46:case 47:this.$={type:"Number",value:s[l]};break;case 48:this.$={type:"Boolean",value:"TRUE"};break;case 49:this.$={type:"Boolean",value:"FALSE"};break;case 50:this.$={type:"Null",value:"null"};break;case 56:this.$={type:"FunctionCall",name:s[l-3],params:s[l-1]};break;case 57:s[l-2].push(s[l]),this.$=s[l-2];break;case 58:case 149:case 195:this.$=[s[l]];break;case 62:this.$={type:"FunctionCallParam",distinctOpt:s[l-1],value:s[l]};break;case 65:this.$=s[l-2],s[l-2].value+="."+s[l];break;case 66:this.$={type:"IdentifierList",value:[s[l]]};break;case 67:case 171:this.$=s[l-2],s[l-2].value.push(s[l]);break;case 70:this.$={type:"WhenThenList",value:[{when:s[l-2],then:s[l]}]};break;case 71:this.$=s[l-4],this.$.value.push({when:s[l-2],then:s[l]});break;case 74:this.$={type:"CaseWhen",caseExprOpt:s[l-3],whenThenList:s[l-2],else:s[l-1]};break;case 75:case 76:case 77:case 78:case 79:this.$={type:"Prefix",prefix:s[l-1],value:s[l]};break;case 84:this.$={type:"SimpleExprParentheses",value:s[l-1]};break;case 85:this.$={type:"SimpleExprParentheses",value:s[l-2],hasRow:!0};break;case 86:this.$={type:"SubQuery",value:s[l-1]};break;case 87:this.$={type:"SubQuery",value:s[l-1],hasExists:!0};break;case 88:this.$={type:"IdentifierExpr",identifier:s[l-2],value:s[l-1]};break;case 91:this.$={type:"BitExpression",operator:"|",left:s[l-2],right:s[l]};break;case 92:this.$={type:"BitExpression",operator:"&",left:s[l-2],right:s[l]};break;case 93:this.$={type:"BitExpression",operator:"<<",left:s[l-2],right:s[l]};break;case 94:this.$={type:"BitExpression",operator:">>",left:s[l-2],right:s[l]};break;case 95:this.$={type:"BitExpression",operator:"+",left:s[l-2],right:s[l]};break;case 96:this.$={type:"BitExpression",operator:"-",left:s[l-2],right:s[l]};break;case 97:this.$={type:"BitExpression",operator:"*",left:s[l-2],right:s[l]};break;case 98:this.$={type:"BitExpression",operator:"/",left:s[l-2],right:s[l]};break;case 99:this.$={type:"BitExpression",operator:"DIV",left:s[l-2],right:s[l]};break;case 100:this.$={type:"BitExpression",operator:"MOD",left:s[l-2],right:s[l]};break;case 101:this.$={type:"BitExpression",operator:"%",left:s[l-2],right:s[l]};break;case 102:this.$={type:"BitExpression",operator:"^",left:s[l-2],right:s[l]};break;case 108:this.$={type:"InSubQueryPredicate",hasNot:s[l-4],left:s[l-5],right:s[l-1]};break;case 109:this.$={type:"InExpressionListPredicate",hasNot:s[l-4],left:s[l-5],right:s[l-1]};break;case 110:this.$={type:"BetweenPredicate",hasNot:s[l-4],left:s[l-5],right:{left:s[l-2],right:s[l]}};break;case 111:this.$={type:"SoundsLikePredicate",hasNot:!1,left:s[l-3],right:s[l]};break;case 112:this.$={type:"LikePredicate",hasNot:s[l-3],left:s[l-4],right:s[l-1],escape:s[l]};break;case 113:this.$={type:"RegexpPredicate",hasNot:s[l-2],left:s[l-3],right:s[l]};break;case 124:this.$={type:"IsNullBooleanPrimary",hasNot:s[l-1],value:s[l-3]};break;case 125:this.$={type:"ComparisonBooleanPrimary",left:s[l-2],operator:s[l-1],right:s[l]};break;case 126:this.$={type:"ComparisonSubQueryBooleanPrimary",operator:s[l-4],subQueryOpt:s[l-3],left:s[l-5],right:s[l-1]};break;case 128:this.$={type:"BooleanExtra",value:s[l]};break;case 130:this.$={type:"IsExpression",hasNot:s[l-1],left:s[l-3],right:s[l]};break;case 131:this.$={type:"NotExpression",value:s[l]};break;case 132:case 135:this.$={type:"AndExpression",operator:s[l-1],left:s[l-2],right:s[l]};break;case 133:case 134:this.$={type:"OrExpression",operator:s[l-1],left:s[l-2],right:s[l]};break;case 136:this.$={type:"XORExpression",left:s[l-2],right:s[l]};break;case 137:this.$={type:"ExpressionList",value:[s[l]]};break;case 138:case 213:this.$=s[l-2],this.$.value.push(s[l]);break;case 145:this.$={type:"GroupBy",value:s[l-1],rollUp:s[l]};break;case 148:this.$={type:"OrderBy",value:s[l-1],rollUp:s[l]};break;case 150:case 196:this.$=s[l-2],s[l-2].push(s[l]);break;case 151:this.$={type:"GroupByOrderByItem",value:s[l-1],sortOpt:s[l]};break;case 157:this.$={type:"Limit",value:[s[l]]};break;case 158:this.$={type:"Limit",value:[s[l-2],s[l]]};break;case 159:this.$={type:"Limit",value:[s[l],s[l-2]],offsetMode:!0};break;case 166:this.$=s[l-1]+" "+s[l];break;case 167:this.$=s[l-3]+" "+s[l-2]+" "+s[l-1]+" "+s[l];break;case 168:this.$={};break;case 169:this.$={from:s[l-8],partition:s[l-7],where:s[l-6],groupBy:s[l-5],having:s[l-4],orderBy:s[l-3],limit:s[l-2],procedure:s[l-1],updateLockMode:s[l]};break;case 170:this.$={type:"TableReferences",value:[s[l]]};break;case 172:this.$={type:"TableReference",value:s[l]};break;case 173:this.$={type:"TableReference",hasOj:!0,value:s[l-1]};break;case 181:this.$={leftRight:null,outOpt:null};break;case 182:this.$={leftRight:s[l-1],outOpt:s[l]};break;case 183:this.$={type:"InnerCrossJoinTable",innerCrossOpt:s[l-2],left:s[l-3],right:s[l],condition:null};break;case 184:this.$={type:"InnerCrossJoinTable",innerCrossOpt:s[l-3],left:s[l-4],right:s[l-1],condition:s[l]};break;case 185:this.$={type:"StraightJoinTable",left:s[l-3],right:s[l-1],condition:s[l]};break;case 186:this.$={type:"LeftRightJoinTable",leftRight:s[l-4],outOpt:s[l-3],left:s[l-5],right:s[l-1],condition:s[l]};break;case 187:this.$={type:"NaturalJoinTable",leftRight:s[l-2].leftRight,outOpt:s[l-2].outOpt,left:s[l-4],right:s[l]};break;case 190:this.$={type:"OnJoinCondition",value:s[l]};break;case 192:this.$={type:"UsingJoinCondition",value:s[l-1]};break;case 198:this.$={type:"Partitions",value:s[l-1]};break;case 200:this.$={hasAs:!0,alias:s[l]};break;case 201:this.$={hasAs:!1,alias:s[l]};break;case 205:case 206:case 207:this.$={type:"ForOptIndexHint",value:s[l]};break;case 212:this.$={type:"IndexHintList",value:[s[l]]};break;case 214:this.$={type:"UseIndexHint",value:s[l-1],forOpt:s[l-3],indexOrKey:s[l-4]};break;case 215:this.$={type:"IgnoreIndexHint",value:s[l-1],forOpt:s[l-3],indexOrKey:s[l-4]};break;case 216:this.$={type:"ForceIndexHint",value:s[l-1],forOpt:s[l-3],indexOrKey:s[l-4]};break;case 217:this.$={type:"TableFactor",value:s[l-3],partition:s[l-2],alias:s[l-1].alias,hasAs:s[l-1].hasAs,indexHintOpt:s[l]};break;case 218:this.$={type:"TableFactor",value:{type:"SubQuery",value:s[l-2]},alias:s[l].alias,hasAs:s[l].hasAs};break;case 219:this.$=s[l-1],this.$.hasParentheses=!0;break;case 220:this.$={type:"PlaceHolder",value:s[l],param:s[l].slice(2,-1)}}},table:[{3:1,4:2,7:3,9:5,10:6,13:7,16:t,18:r},{1:[3]},{5:9,6:a,8:n,14:s},{5:12,6:a,8:n},e([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],i,{15:13,29:l,30:o,31:c}),e(u,[2,5]),e([6,8,146],p,{11:17,137:18,138:d}),{14:h},{4:21,18:r},{6:[1,22]},{15:23,18:i,29:l,30:o,31:c},{6:[2,3]},{6:[1,24]},e(f,[2,18],{19:25,32:[1,26]}),e(b,[2,13]),e(b,[2,14]),e(b,[2,15]),e(u,m,{12:27,145:28,146:g}),e(y,[2,147]),{16:v,35:E,47:32,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,136:30,139:31,195:B},{15:67,16:i,29:l,30:o,31:c},{17:[1,68]},{1:[2,1]},{4:69,9:70,18:r},{1:[2,2]},e(H,[2,20],{20:71,33:[1,72]}),e(f,[2,17]),e(u,[2,6]),e(U,[2,161]),{35:[1,73]},e(y,M,{132:74,43:F,133:W}),e(j,[2,149]),e(j,[2,152],{140:77,107:q,124:Q,125:z,126:J,127:X,141:[1,83],142:[1,84]}),e(V,[2,129],{111:86,34:[1,87],112:[1,88],113:[1,89],114:[1,90],115:[1,91],116:[1,92],117:[1,93],121:[1,85]}),{16:v,35:E,47:94,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(Y,[2,123]),e(Y,[2,107],{100:95,45:K,79:Z,81:ee,91:te,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe,99:ce,101:ue,105:pe,106:pe,109:pe,110:pe,108:[1,96]}),e(de,[2,90]),e(he,[2,80]),e(he,[2,81],{67:fe}),e(he,[2,82]),e(he,[2,83]),{4:112,16:v,18:r,35:E,47:113,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,85:111,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:[1,114]},{16:[1,115]},{50:be,66:116},e(he,[2,89]),e(he,[2,51]),e(he,[2,52]),e(he,[2,53]),e(he,[2,54]),e(he,[2,55]),e([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],me,{16:ge}),{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:119,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:120,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:121,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:122,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:123,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,47:125,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,69:124,71:[2,68],75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(he,[2,44]),e(he,[2,45]),e(he,[2,46]),e(he,[2,47]),e(he,[2,48]),e(he,[2,49]),e(he,[2,50]),e(he,[2,220]),{10:127,13:126,16:t},e([6,8,14,138,146],[2,9]),e(u,[2,10],{14:s}),e(u,[2,11]),e(ye,[2,22],{21:128,36:[1,129]}),{34:[1,130]},e(U,[2,157],{43:[1,131],147:[1,132]}),e(y,[2,148]),{16:v,35:E,47:32,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,139:133,195:B},{134:[1,134]},e(j,[2,151]),{16:v,35:E,47:135,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:v,35:E,47:136,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:v,35:E,47:137,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:v,35:E,47:138,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:v,35:E,47:139,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(j,[2,153]),e(j,[2,154]),e([57,58,60,123],pe,{100:140,101:ue}),{16:v,29:[1,143],35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,104:141,118:142,119:[1,144],195:B},e(ve,[2,114]),e(ve,[2,115]),e(ve,[2,116]),e(ve,[2,117]),e(ve,[2,118]),e(ve,[2,119]),e(ve,[2,120]),e(V,[2,131]),{105:[1,145],106:[1,146],109:[1,147],110:[1,148]},{109:[1,149]},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:150,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:151,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:152,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:153,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:154,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:155,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:156,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:157,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:158,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:159,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:160,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:161,195:B},e([57,58,60,105,106,109,110,123],[2,104]),{50:[1,162]},{17:[1,163],43:Ee},{17:[1,165]},e($e,[2,137],{107:q,124:Q,125:z,126:J,127:X}),{16:v,35:E,47:113,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,85:166,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{4:167,18:r},{16:v,35:E,47:168,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,67:fe,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e([6,8,14,16,17,35,36,43,49,50,51,54,55,57,58,60,67,76,79,81,82,83,84,86,87,88,89,101,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194,195],me),e($e,_e,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,64:169,65:170,47:174,16:v,30:Oe,35:E,45:Re,46:Ne,50:$,51:_,54:O,55:R,57:N,58:I,60:k,76:S,79:x,81:C,82:A,83:T,84:L,86:w,87:D,88:G,101:P,195:B}),e(he,[2,75]),e(he,[2,76]),e(he,[2,77]),e(he,[2,78]),e(he,[2,79]),{70:175,71:[1,176]},{71:[2,69],107:q,124:Q,125:z,126:J,127:X},e(Ie,[2,7],{14:h}),e(Ie,[2,8]),e(ke,[2,24],{22:177,37:[1,178]}),e(ye,[2,21]),{35:[1,179]},{35:[1,180]},{35:[1,181]},e(j,[2,150]),e(Se,[2,144]),e(V,[2,132]),e(xe,[2,133],{107:q,124:Q}),e(xe,[2,134],{107:q,124:Q}),e(V,[2,135]),e(xe,[2,136],{107:q,124:Q}),{56:184,57:N,58:I,60:[1,183],122:182,123:[1,185]},e(Y,[2,125]),{16:[1,186]},{16:[2,121]},{16:[2,122]},{16:[1,187]},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:188,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:189,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:190,195:B},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:191,195:B},e([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,91],{45:K,79:Z,81:ee,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe,99:ce}),e([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,92],{45:K,79:Z,81:ee,93:ae,94:ne,95:se,96:ie,97:le,98:oe}),e(Ce,[2,93],{45:K,79:Z,81:ee,95:se,96:ie,97:le,98:oe}),e(Ce,[2,94],{45:K,79:Z,81:ee,95:se,96:ie,97:le,98:oe}),e(Ae,[2,95],{45:K,95:se,96:ie,97:le,98:oe}),e(Ae,[2,96],{45:K,95:se,96:ie,97:le,98:oe}),e(de,[2,97]),e(de,[2,98]),e(de,[2,99]),e(de,[2,100]),e(de,[2,101]),e([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,102],{45:K,79:Z,81:ee,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe}),e([6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],[2,65]),e(he,[2,84]),{16:v,35:E,47:192,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(he,[2,86]),{17:[1,193],43:Ee},{17:[1,194]},{89:[1,195],107:q,124:Q,125:z,126:J,127:X},{17:[1,196],43:[1,197]},e($e,[2,58]),e($e,[2,60]),e($e,[2,61]),{16:v,35:E,47:198,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e($e,[2,63],{107:q,124:Q,125:z,126:J,127:X}),{71:[1,200],73:199,74:[1,201],77:[2,72]},{16:v,35:E,47:202,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(Te,[2,26],{23:203,38:[1,204]}),e(ke,[2,23]),e(H,[2,19]),e(U,[2,158]),e(U,[2,159]),e(V,[2,130]),e(Y,[2,124]),e(V,[2,127]),e(V,[2,128]),{4:205,18:r},{4:206,16:v,18:r,35:E,47:113,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,85:207,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{45:K,79:Z,81:ee,91:te,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe,99:ce,107:[1,208]},e(Y,[2,105],{102:209,103:[1,210]}),e(Y,[2,113],{45:K,79:Z,81:ee,91:te,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe,99:ce}),e(Y,[2,111],{45:K,79:Z,81:ee,91:te,92:re,93:ae,94:ne,95:se,96:ie,97:le,98:oe,99:ce}),e($e,[2,138],{107:q,124:Q,125:z,126:J,127:X}),e(he,[2,85]),e(he,[2,87]),e(he,[2,88]),e(he,[2,56]),e($e,_e,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,47:174,65:211,16:v,30:Oe,35:E,45:Re,46:Ne,50:$,51:_,54:O,55:R,57:N,58:I,60:k,76:S,79:x,81:C,82:A,83:T,84:L,86:w,87:D,88:G,101:P,195:B}),e($e,[2,62],{107:q,124:Q,125:z,126:J,127:X}),{77:[1,212]},{16:v,35:E,47:213,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:v,35:E,47:214,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{72:[1,215],107:q,124:Q,125:z,126:J,127:X},e(Le,[2,28],{24:216,39:[1,217]}),e(Te,[2,25]),{17:[1,218]},{17:[1,219]},{17:[1,220],43:Ee},{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,104:221,195:B},e(Y,[2,112]),{16:v,35:E,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:222,81:C,82:A,83:T,84:L,86:w,87:D,88:G,195:B},e($e,[2,57]),e(he,[2,74]),{72:[1,223],107:q,124:Q,125:z,126:J,127:X},{77:[2,73],107:q,124:Q,125:z,126:J,127:X},{16:v,35:E,47:224,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(we,[2,29],{25:225,40:[1,226],41:[1,227]}),e(Le,[2,27]),e(Y,[2,126]),e(Y,[2,108]),e(Y,[2,109]),e(Y,[2,110]),e(Y,[2,106]),{16:v,35:E,47:228,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(De,[2,70],{107:q,124:Q,125:z,126:J,127:X}),e(Ge,[2,33],{26:229,42:[1,230]}),e(we,[2,30]),e(we,[2,31]),e(De,[2,71],{107:q,124:Q,125:z,126:J,127:X}),{16:v,27:231,35:E,44:232,45:Pe,46:Be,47:235,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(Ge,[2,32]),e(He,[2,168],{28:236,43:[1,237],157:[1,238]}),e(Ue,[2,35]),e(Ue,[2,36]),e(Ue,[2,37]),e(Ue,[2,39],{48:239,49:[1,240],50:[1,241],51:[1,242],107:q,124:Q,125:z,126:J,127:X}),e(He,[2,12]),{16:v,35:E,44:243,45:Pe,46:Be,47:235,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:Me,50:be,66:250,88:Fe,158:244,160:245,161:246,172:249,174:248},e(Ue,[2,38]),{50:[1,252],51:[1,253]},e(Ue,[2,41]),e(Ue,[2,43]),e(Ue,[2,34]),e([6,8,14,17,129,135,138,144,146,150,152,154],We,{159:254,43:je,182:qe}),e(Qe,[2,170]),e(Qe,[2,172],{163:257,166:259,36:ze,164:Je,165:Xe,167:Ve,168:Ye,173:Ke,177:Ze}),{162:[1,265]},e(et,[2,193]),e(et,[2,194]),e([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],We,{159:266,67:fe,182:qe}),{4:267,16:Me,18:r,50:be,66:250,88:Fe,158:268,160:245,161:246,172:249,174:248},e(Ue,[2,40]),e(Ue,[2,42]),e(tt,[2,139],{128:269,129:[1,270]}),{16:Me,50:be,66:250,88:Fe,160:271,161:246,172:249,174:248},{16:[1,272]},{173:[1,273]},{16:Me,50:be,66:250,174:274},{169:275,170:rt,173:at},{166:278,167:Ve,168:Ye,171:277,173:[2,181]},{173:[2,175]},{173:[2,176]},e(nt,[2,177]),e(nt,[2,178]),{16:Me,50:be,66:250,161:279,172:249,174:248},e(st,it,{183:280,66:282,49:lt,50:be}),{17:[1,283]},{17:[1,284],43:je},e(Se,[2,141],{130:285,131:286,135:[1,287]}),{16:v,35:E,47:288,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(Qe,[2,171]),{50:be,66:290,181:289},{16:Me,50:be,66:250,174:291},{176:292,179:ot},{173:[1,294]},{173:[2,180]},{173:[1,295]},{169:296,170:rt,173:at},{36:ze,89:[1,297],163:257,164:Je,165:Xe,166:259,167:Ve,168:Ye,173:Ke,177:Ze},e(et,[2,210],{189:298,190:299,191:300,192:ct,193:ut,194:pt}),{50:be,66:304},e(st,[2,201],{67:fe}),e(et,it,{66:282,183:305,49:lt,50:be}),e(et,[2,219]),e(dt,[2,155],{143:306,144:[1,307]}),e(Se,[2,142]),{16:v,35:E,47:32,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,136:308,139:31,195:B},e(tt,[2,140],{107:q,124:Q,125:z,126:J,127:X}),{17:[1,309],43:[1,310]},e($e,[2,195],{67:fe}),e([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,183],{175:311,176:312,179:ot,180:ht}),e(et,[2,185]),{16:v,35:E,47:314,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},{16:Me,50:be,66:250,161:315,172:249,174:248},{16:Me,50:be,66:250,174:316},{173:[2,182]},e(Qe,[2,173]),e(et,[2,217]),e(et,[2,211]),e(et,[2,212]),{184:318,185:ft,186:bt},{184:321,185:ft,186:bt},{184:322,185:ft,186:bt},e(st,[2,200],{67:fe}),e(et,[2,218]),e(y,p,{137:18,11:323,138:d}),{16:v,35:E,47:324,50:$,51:_,52:47,53:48,54:O,55:R,56:49,57:N,58:I,59:50,60:k,61:38,62:51,63:40,66:39,75:46,76:S,78:41,79:x,80:37,81:C,82:A,83:T,84:L,86:w,87:D,88:G,90:36,101:P,104:35,120:33,195:B},e(Se,M,{132:325,43:F,133:W}),e([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,198]),{50:be,66:326},e(et,[2,184]),e(et,[2,191]),{16:[1,327]},e(et,[2,190],{107:q,124:Q,125:z,126:J,127:X}),{36:ze,163:257,164:Je,165:Xe,166:259,167:Ve,168:Ye,173:Ke,175:328,176:312,177:Ze,179:ot,180:ht},e(et,[2,187]),{191:329,192:ct,193:ut,194:pt},{16:mt,152:gt,187:330},e(yt,[2,202]),e(yt,[2,203]),{16:mt,152:gt,187:332},{16:mt,152:gt,187:333},e(U,m,{145:28,12:334,146:g}),e(dt,[2,156],{107:q,124:Q,125:z,126:J,127:X}),e(Se,[2,145]),e($e,[2,196],{67:fe}),{50:be,66:336,68:335},e(et,[2,186]),e(et,[2,213]),{16:[1,337]},{135:[1,340],138:[1,339],173:[1,338]},{16:[1,341]},{16:[1,342]},e(vt,[2,162],{148:343,149:344,150:[1,345]}),{17:[1,346],43:Et},e($e,[2,66],{67:fe}),{17:[2,208],50:be,66:336,68:349,188:348},{16:[2,205]},{16:[2,206]},{16:[2,207]},{50:be,66:336,68:350},{50:be,66:336,68:351},e(He,[2,165],{151:352,152:[1,353],154:[1,354]}),e(vt,[2,163]),{50:[1,356],63:355},e(et,[2,192]),{50:be,66:357},{17:[1,358]},{17:[2,209],43:Et},{17:[1,359],43:Et},{17:[1,360],43:Et},e(He,[2,169]),{153:[1,361]},{105:[1,362]},e(vt,[2,164]),{16:ge},e($e,[2,67],{67:fe}),e(et,[2,214]),e(et,[2,215]),e(et,[2,216]),e(He,[2,166]),{155:[1,363]},{156:[1,364]},e(He,[2,167])],defaultActions:{11:[2,3],22:[2,1],24:[2,2],143:[2,121],144:[2,122],261:[2,175],262:[2,176],276:[2,180],296:[2,182],338:[2,205],339:[2,206],340:[2,207]},parseError:function(e,t){if(!t.recoverable){var r=new Error(e);throw r.hash=t,r}this.trace(e)},parse:function(e){var t=this,r=[0],a=[null],n=[],s=this.table,i="",l=0,o=0,c=2,u=1,p=n.slice.call(arguments,1),d=Object.create(this.lexer),h={yy:{}};for(var f in this.yy)Object.prototype.hasOwnProperty.call(this.yy,f)&&(h.yy[f]=this.yy[f]);d.setInput(e,h.yy),h.yy.lexer=d,h.yy.parser=this,void 0===d.yylloc&&(d.yylloc={});var b=d.yylloc;n.push(b);var m=d.options&&d.options.ranges;"function"==typeof h.yy.parseError?this.parseError=h.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var g,y,v,E,$,_,O,R,N=function(){var e;return"number"!=typeof(e=d.lex()||u)&&(e=t.symbols_[e]||e),e},I={};;){if(y=r[r.length-1],this.defaultActions[y]?v=this.defaultActions[y]:(null==g&&(g=N()),v=s[y]&&s[y][g]),void 0===v||!v.length||!v[0]){var k="";for($ in R=[],s[y])this.terminals_[$]&&$>c&&R.push("'"+this.terminals_[$]+"'");k=d.showPosition?"Parse error on line "+(l+1)+":\n"+d.showPosition()+"\nExpecting "+R.join(", ")+", got '"+(this.terminals_[g]||g)+"'":"Parse error on line "+(l+1)+": Unexpected "+(g==u?"end of input":"'"+(this.terminals_[g]||g)+"'"),this.parseError(k,{text:d.match,token:this.terminals_[g]||g,line:d.yylineno,loc:b,expected:R})}if(v[0]instanceof Array&&v.length>1)throw new Error("Parse Error: multiple actions possible at state: "+y+", token: "+g);switch(v[0]){case 1:r.push(g),a.push(d.yytext),n.push(d.yylloc),r.push(v[1]),g=null,o=d.yyleng,i=d.yytext,l=d.yylineno,b=d.yylloc;break;case 2:if(_=this.productions_[v[1]][1],I.$=a[a.length-_],I._$={first_line:n[n.length-(_||1)].first_line,last_line:n[n.length-1].last_line,first_column:n[n.length-(_||1)].first_column,last_column:n[n.length-1].last_column},m&&(I._$.range=[n[n.length-(_||1)].range[0],n[n.length-1].range[1]]),void 0!==(E=this.performAction.apply(I,[i,o,l,h.yy,v[1],a,n].concat(p))))return E;_&&(r=r.slice(0,-1*_*2),a=a.slice(0,-1*_),n=n.slice(0,-1*_)),r.push(this.productions_[v[1]][0]),a.push(I.$),n.push(I._$),O=s[r[r.length-2]][r[r.length-1]],r.push(O);break;case 3:return!0}}return!0}},_t={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,r=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var a=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var n=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===a.length?this.yylloc.first_column:0)+a[a.length-r.length].length-r[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[n[0],n[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var r,a,n;if(this.options.backtrack_lexer&&(n={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(n.yylloc.range=this.yylloc.range.slice(0))),(a=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=a.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:a?a[a.length-1].length-a[a.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],r=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack){for(var s in n)this[s]=n[s];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,r,a;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var n=this._currentRules(),s=0;s<n.length;s++)if((r=this._input.match(this.rules[n[s]]))&&(!t||r[0].length>t[0].length)){if(t=r,a=s,this.options.backtrack_lexer){if(!1!==(e=this.test_match(r,n[s])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,n[a]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return e||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(e,t,r,a){switch(r){case 0:case 1:case 2:case 3:break;case 4:return 195;case 5:case 6:case 7:case 115:case 119:return 50;case 8:return 18;case 9:return 29;case 10:return 119;case 11:return 30;case 12:return 31;case 13:return 32;case 14:return 33;case 15:return 36;case 16:return 37;case 17:return 38;case 18:return 39;case 19:return 40;case 20:return 41;case 21:return 42;case 22:return 46;case 23:return 49;case 24:return 57;case 25:return 58;case 26:return 60;case 27:return"COLLATE";case 28:return 84;case 29:return 86;case 30:return 87;case 31:return 76;case 32:return 71;case 33:return 72;case 34:return 74;case 35:return 77;case 36:return 96;case 37:return 97;case 38:return 101;case 39:return 106;case 40:return 105;case 41:return 108;case 42:return 109;case 43:return 103;case 44:return 110;case 45:return 121;case 46:return 123;case 47:return 107;case 48:return 126;case 49:return 127;case 50:return 157;case 51:return 182;case 52:return 192;case 53:return 185;case 54:return 186;case 55:return 152;case 56:return 173;case 57:return 138;case 58:return 135;case 59:return 193;case 60:return 194;case 61:return 164;case 62:return 165;case 63:return 179;case 64:return 180;case 65:return 167;case 66:return 168;case 67:return 170;case 68:return 177;case 69:return 129;case 70:return 141;case 71:return 142;case 72:return 133;case 73:return 134;case 74:return 144;case 75:return 147;case 76:return 150;case 77:return 153;case 78:return 154;case 79:return 155;case 80:return 156;case 81:return 162;case 82:return 146;case 83:return 14;case 84:return 43;case 85:return 34;case 86:return 16;case 87:return 17;case 88:return 82;case 89:return 117;case 90:return 83;case 91:return 91;case 92:return 92;case 93:return 79;case 94:return 81;case 95:return 45;case 96:return 95;case 97:return 98;case 98:return 99;case 99:return 94;case 100:return 112;case 101:return 113;case 102:return 93;case 103:return"<=>";case 104:return 114;case 105:return 116;case 106:return 115;case 107:return 88;case 108:return 89;case 109:return 8;case 110:case 111:case 117:case 118:return 51;case 112:return 55;case 113:return 35;case 114:return 54;case 116:return 67;case 120:return 6;case 121:return"INVALID"}},rules:[/^(?:[/][*](.|\n)*?[*][/])/i,/^(?:[-][-]\s.*\n)/i,/^(?:[#]\s.*\n)/i,/^(?:\s+)/i,/^(?:[$][{](.*?)[}])/i,/^(?:[`][a-zA-Z_\u4e00-\u9fa5][a-zA-Z0-9_\u4e00-\u9fa5]*[`])/i,/^(?:[\w]+[\u4e00-\u9fa5]+[0-9a-zA-Z_\u4e00-\u9fa5]*)/i,/^(?:[\u4e00-\u9fa5][0-9a-zA-Z_\u4e00-\u9fa5]*)/i,/^(?:SELECT\b)/i,/^(?:ALL\b)/i,/^(?:ANY\b)/i,/^(?:DISTINCT\b)/i,/^(?:DISTINCTROW\b)/i,/^(?:HIGH_PRIORITY\b)/i,/^(?:MAX_STATEMENT_TIME\b)/i,/^(?:STRAIGHT_JOIN\b)/i,/^(?:SQL_SMALL_RESULT\b)/i,/^(?:SQL_BIG_RESULT\b)/i,/^(?:SQL_BUFFER_RESULT\b)/i,/^(?:SQL_CACHE\b)/i,/^(?:SQL_NO_CACHE\b)/i,/^(?:SQL_CALC_FOUND_ROWS\b)/i,/^(?:([a-zA-Z_\u4e00-\u9fa5][a-zA-Z0-9_\u4e00-\u9fa5]*\.){1,2}\*)/i,/^(?:AS\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:NULL\b)/i,/^(?:COLLATE\b)/i,/^(?:BINARY\b)/i,/^(?:ROW\b)/i,/^(?:EXISTS\b)/i,/^(?:CASE\b)/i,/^(?:WHEN\b)/i,/^(?:THEN\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:DIV\b)/i,/^(?:MOD\b)/i,/^(?:NOT\b)/i,/^(?:BETWEEN\b)/i,/^(?:IN\b)/i,/^(?:SOUNDS\b)/i,/^(?:LIKE\b)/i,/^(?:ESCAPE\b)/i,/^(?:REGEXP\b)/i,/^(?:IS\b)/i,/^(?:UNKNOWN\b)/i,/^(?:AND\b)/i,/^(?:OR\b)/i,/^(?:XOR\b)/i,/^(?:FROM\b)/i,/^(?:PARTITION\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:KEY\b)/i,/^(?:FOR\b)/i,/^(?:JOIN\b)/i,/^(?:ORDER\s+BY\b)/i,/^(?:GROUP\s+BY\b)/i,/^(?:IGNORE\b)/i,/^(?:FORCE\b)/i,/^(?:INNER\b)/i,/^(?:CROSS\b)/i,/^(?:ON\b)/i,/^(?:USING\b)/i,/^(?:LEFT\b)/i,/^(?:RIGHT\b)/i,/^(?:OUTER\b)/i,/^(?:NATURAL\b)/i,/^(?:WHERE\b)/i,/^(?:ASC\b)/i,/^(?:DESC\b)/i,/^(?:WITH\b)/i,/^(?:ROLLUP\b)/i,/^(?:HAVING\b)/i,/^(?:OFFSET\b)/i,/^(?:PROCEDURE\b)/i,/^(?:UPDATE\b)/i,/^(?:LOCK\b)/i,/^(?:SHARE\b)/i,/^(?:MODE\b)/i,/^(?:OJ\b)/i,/^(?:LIMIT\b)/i,/^(?:UNION\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\()/i,/^(?:\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\|)/i,/^(?:&)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:;)/i,/^(?:['](\\.|[^'])*['])/i,/^(?:["](\\.|[^"])*["])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?[eE][-][0-9]+(\.[0-9]+)?)/i,/^(?:[a-zA-Z_\u4e00-\u9fa5][a-zA-Z0-9_\u4e00-\u9fa5]*)/i,/^(?:\.)/i,/^(?:["][a-zA-Z_\u4e00-\u9fa5][a-zA-Z0-9_\u4e00-\u9fa5]*["])/i,/^(?:['][a-zA-Z_\u4e00-\u9fa5][a-zA-Z0-9_\u4e00-\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\?))\2.)*?\1)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],inclusive:!0}}};function Ot(){this.yy={}}return $t.lexer=_t,Ot.prototype=$t,$t.Parser=Ot,new Ot}();const P=e=>!!e&&"string"!=typeof e,B=e=>!!e&&("String"===e.type||"Number"===e.type||"Boolean"===e.type),H=e=>!!e&&"Identifier"===e.type,U=e=>{switch(typeof e){case"number":return`${e}`;case"boolean":return e?"TRUE":"FALSE";default:return`'${e}'`}},M=e=>e.replace(/(^`|`$)/g,""),F=e=>"String"===e.type?e.value.replace(/(^'|'$)/g,"").replace(/(^"|"$)/g,""):"Boolean"===e.type?"true"===e.value.toLowerCase():parseFloat(e.value),W=e=>{const t=e.operator.replace("&&","and").replace("||","or").toLowerCase();return"AndExpression"===e.left.type||"OrExpression"===e.left.type?[...W(e.left),t,e.right]:[e.left,t,e.right]},j=(e,t)=>{let r=/^[ \t\n\r]*SELECT\b/i.test(e)?e:`SELECT * FROM t WHERE ${e}`,a=!1;if(t){const{params:e,paramPrefix:n,independentCombinators:s}=t;if(a=s||!1,e)if(Array.isArray(e)){let t=0;r=r.replace(/\?/g,(()=>{const r=U(e[t]);return t++,r}))}else{const t=Object.keys(e),a=null!=n?n:":";t.forEach((t=>{r=r.replace(new RegExp(`\\${a}${t}\\b`,"ig"),U(e[t]))}))}}const n=e=>{if("NotExpression"===e.type){const t="SimpleExprParentheses"===e.value.type?e.value.value.value[0]:e.value,r=n(t);if(r)return"rules"in r?m(b({},r),{not:!0}):{combinator:"and",rules:[r],not:!0}}else{if("SimpleExprParentheses"===e.type){const t=e.value.value[0];if("AndExpression"===t.type||"OrExpression"===t.type)return n(t);const r=n(t);return r?{combinator:"and",rules:[r]}:null}if("AndExpression"===e.type||"OrExpression"===e.type){if(a){const t=W(e).map((e=>"string"==typeof e?e:n(e)));return t.includes(null)?null:{rules:t}}const t=(e=>{const t=W(e),r=[];let a=0;for(let n=0;n<t.length;n+=2)if("and"===t[n+1]){a=n;let e=1;for(;"and"===t[a+e];)n+=2,e+=2;const s=t.slice(a,n+1);r.push(s),n-=2}else"or"===t[n+1]&&(0===n||n===t.length-3?(0!==n&&"or"!==t[n-1]||r.push(t[n]),r.push(t[n+1]),n===t.length-3&&r.push(t[n+2])):("and"===t[n-1]||r.push(t[n]),r.push(t[n+1])));return 1===r.length&&Array.isArray(r[0])?r[0]:r})(e),r=t[1],s=t.filter((e=>Array.isArray(e)||P(e))).map((e=>Array.isArray(e)?e.filter(P):e)).map((e=>Array.isArray(e)?{combinator:"and",rules:e.map((e=>n(e))).filter((e=>!!e))}:n(e))).filter((e=>!!e));if(s.length>0)return{combinator:r,rules:s}}else if("IsNullBooleanPrimary"===e.type){if(H(e.value))return{field:M(e.value.value),operator:e.hasNot?"notNull":"null",value:null}}else if("ComparisonBooleanPrimary"===e.type){if(H(e.left)&&!H(e.right)||!H(e.left)&&H(e.right)){const t=H(e.left)?e.left.value:e.right.value,a=[e.left,e.right].find((e=>!H(e)));if(B(a))return{field:M(t),operator:(r=e.operator,r.replace("<>","!=")),value:F(a)}}}else if("InExpressionListPredicate"===e.type){if(H(e.left)){const r=e.right.value.filter(B).map(F),a=(null==t?void 0:t.listsAsArrays)?r:r.join(", "),n=e.hasNot?"notIn":"in";return{field:M(e.left.value),operator:n,value:a}}}else if("BetweenPredicate"===e.type){if(H(e.left)&&B(e.right.left)&&B(e.right.right)){const r=[e.right.left,e.right.right].map(F),a=(null==t?void 0:t.listsAsArrays)?r:r.join(", "),n=e.hasNot?"notBetween":"between";return{field:M(e.left.value),operator:n,value:a}}}else if("LikePredicate"===e.type&&H(e.left)&&"String"===e.right.type){const t=F(e.right),r=t.replace(/(^%)|(%$)/g,"");let a="=";return/^%.*%$/.test(t)?a=e.hasNot?"doesNotContain":"contains":/%$/.test(t)?a=e.hasNot?"doesNotBeginWith":"beginsWith":/^%/.test(t)&&(a=e.hasNot?"doesNotEndWith":"endsWith"),{field:M(e.left.value),operator:a,value:r}}}var r;return null},{where:s}=G.parse(r).value;if(s){const e=n(s);if(e)return"rules"in e?e:{combinator:"and",rules:[e]}}return{combinator:"and",rules:[]}},q=e=>e.slice(0,e.length-1),Q=(e,t)=>e.join("-")===t.join("-"),z=(e,t)=>e.length<t.length&&RegExp(`^${e.join("-")}`).test(t.join("-")),J=e=>s(e,(e=>{e.id||(e.id=`r-${L()}`)})),X=e=>s(e,(e=>{e.id||(e.id=`g-${L()}`),e.rules=e.rules.map((e=>"string"==typeof e?e:"rules"in e?X(e):J(e))),e.not=!!e.not})),V=e=>JSON.parse(JSON.stringify(m(b({},e),{id:`r-${L()}`}))),Y=e=>{if("combinator"in e){const{combinator:t,not:r}=e,a=e.rules.map((e=>"rules"in e?Y(e):V(e)));return{id:`g-${L()}`,combinator:t,rules:a,not:r}}const{not:t}=e,r=e.rules.map((e=>"string"==typeof e?e:"rules"in e?Y(e):V(e)));return{id:`g-${L()}`,rules:r,not:t}},K=({id:r,path:a,field:n,operator:s,value:o,translations:c,schema:u,disabled:p,context:d})=>{var h,f,b,m,g,y;const{classNames:v,controls:E,fields:$,fieldMap:O,getInputType:R,getOperators:N,getValueEditorType:I,getValues:k,moveRule:S,onPropChange:x,onRuleRemove:C,autoSelectField:A,showCloneButtons:T,independentCombinators:L,validationMap:D}=u,G=e.exports.useRef(null),P=e.exports.useRef(null),[{isDragging:B,dragMonitorId:H},U,M]=i((()=>({type:ce.rule,item:()=>({path:a}),collect:e=>({isDragging:!p&&e.isDragging(),dragMonitorId:e.getHandlerId()})})),[p,a]),[{isOver:F,dropMonitorId:W},j]=l((()=>({accept:[ce.rule,ce.ruleGroup],canDrop:e=>{if(p)return!1;const t=q(a),r=q(e.path),n=a[a.length-1],s=e.path[e.path.length-1];return!(z(e.path,a)||Q(t,r)&&(n===s||n===s-1||L&&n===s-2))},collect:e=>({isOver:e.canDrop()&&e.isOver(),dropMonitorId:e.getHandlerId()}),drop:(e,t)=>{const r=q(a),n=a[a.length-1];S(e.path,[...r,n+1])}})),[p,S,a]);U(P),M(j(G));const J=e=>t=>{p||x(e,t,a)},X=null!=(h=null==O?void 0:O[n])?h:{},V=null!=(f=X.inputType)?f:R(n,s),Y=null!=(b=X.operators)?b:N(n),K=null!=(m=X.valueEditorType)?m:I(n,s),Z=null!=(g=X.values)?g:k(n,s),ee=a.length,te=null!=(y=D[null!=r?r:""])?y:"function"==typeof X.validator?X.validator({id:r,field:n,operator:s,value:o}):null,re=w(te),ae=B?se.dndDragging:"",ne=F?se.dndOver:"",ie=_(se.rule,v.rule,re,ae,ne);return t.createElement("div",{ref:G,"data-testid":ue.rule,"data-dragmonitorid":H,"data-dropmonitorid":W,className:ie,"data-rule-id":r,"data-level":ee,"data-path":JSON.stringify(a)},t.createElement(E.dragHandle,{testID:ue.dragHandle,ref:P,level:ee,path:a,title:c.dragHandle.title,label:c.dragHandle.label,className:_(se.dragHandle,v.dragHandle),disabled:p,context:d,validation:te}),t.createElement(E.fieldSelector,{testID:ue.fields,options:$,title:c.fields.title,value:n,operator:s,className:_(se.fields,v.fields),handleOnChange:J("field"),level:ee,path:a,disabled:p,context:d,validation:te}),(A||"~"!==X.name)&&t.createElement(t.Fragment,null,t.createElement(E.operatorSelector,{testID:ue.operators,field:n,fieldData:X,title:c.operators.title,options:Y,value:s,className:_(se.operators,v.operators),handleOnChange:J("operator"),level:ee,path:a,disabled:p,context:d,validation:te}),t.createElement(E.valueEditor,{testID:ue.valueEditor,field:n,fieldData:X,title:c.value.title,operator:s,value:o,type:K,inputType:V,values:Z,className:_(se.value,v.value),handleOnChange:J("value"),level:ee,path:a,disabled:p,context:d,validation:te})),T&&t.createElement(E.cloneRuleAction,{testID:ue.cloneRule,label:c.cloneRule.label,title:c.cloneRule.title,className:_(se.cloneRule,v.cloneRule),handleOnClick:e=>{if(e.preventDefault(),e.stopPropagation(),!p){const e=[...q(a),a[a.length-1]+1];S(a,e,!0)}},level:ee,path:a,disabled:p,context:d,validation:te}),t.createElement(E.removeRuleAction,{testID:ue.removeRule,label:c.removeRule.label,title:c.removeRule.title,className:_(se.removeRule,v.removeRule),handleOnClick:e=>{e.preventDefault(),e.stopPropagation(),p||C(a)},level:ee,path:a,disabled:p,context:d,validation:te}))};K.displayName="Rule";const Z=e=>{var r=e,{component:a,path:n,moveRule:s,independentCombinators:i}=r,o=((e,t)=>{var r={};for(var a in e)d.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&p)for(var a of p(e))t.indexOf(a)<0&&h.call(e,a)&&(r[a]=e[a]);return r})(r,["component","path","moveRule","independentCombinators"]);const[{isOver:c,dropMonitorId:u},f]=l((()=>({accept:[ce.rule,ce.ruleGroup],canDrop:e=>{const t=q(n),r=q(e.path),a=n[n.length-1],s=e.path[e.path.length-1];return!(z(e.path,n)||Q(e.path,n)||Q(t,r)&&a-1===s||i&&Q(t,r)&&a===s-1)},collect:e=>({isOver:e.canDrop()&&e.isOver(),dropMonitorId:e.getHandlerId()}),drop:(e,t)=>{const r=q(n),a=n[n.length-1];s(e.path,[...r,a])}})),[s,n,i]),g=c?se.dndOver:"",y=_(g,se.betweenRules);return t.createElement("div",{ref:f,className:y,"data-dropmonitorid":u,"data-testid":ue.inlineCombinator},t.createElement(a,m(b({},o),{path:n,testID:ue.combinators})))};Z.displayName="InlineCombinator";const ee=({id:r,path:a,combinator:n="and",rules:s,translations:o,schema:c,disabled:u,not:p,context:d})=>{const{classNames:h,combinators:f,controls:b,createRule:m,createRuleGroup:g,independentCombinators:y,onGroupAdd:v,onGroupRemove:E,onPropChange:$,onRuleAdd:O,moveRule:R,showCombinatorsBetweenRules:N,showNotToggle:I,showCloneButtons:k,updateIndependentCombinator:S,validationMap:x,disabledPaths:C}=c,A=e.exports.useRef(null),T=e.exports.useRef(null),L=e.exports.useRef(null),[{isDragging:D,dragMonitorId:G},P,B]=i((()=>({type:ce.ruleGroup,item:()=>({path:a}),collect:e=>({isDragging:!u&&e.isDragging(),dragMonitorId:e.getHandlerId()})})),[u,a]),[{isOver:H,dropMonitorId:U},M]=l((()=>({accept:[ce.rule,ce.ruleGroup],canDrop:e=>{if(u)return!1;const t=q(e.path),r=e.path[e.path.length-1];return!(z(e.path,a)||Q(a,t)&&0===r||Q(a,e.path))},collect:e=>({isOver:e.canDrop()&&e.isOver(),dropMonitorId:e.getHandlerId()}),drop:(e,t)=>!u&&R(e.path,[...a,0])})),[u,R,a]);a.length>0&&(P(T),B(A)),M(L);const F=e=>{u||$("combinator",e,a)},W=a.length,j=x[null!=r?r:""],J=w(j),X=D?se.dndDragging:"",V=H?se.dndOver:"",Y=_(se.ruleGroup,h.ruleGroup,J,X);return t.createElement("div",{ref:A,className:Y,"data-testid":ue.ruleGroup,"data-dragmonitorid":G,"data-dropmonitorid":U,"data-rule-group-id":r,"data-level":W,"data-path":JSON.stringify(a)},t.createElement("div",{ref:L,className:_(se.header,h.header,V)},W>0&&t.createElement(b.dragHandle,{testID:ue.dragHandle,ref:T,level:W,path:a,title:o.dragHandle.title,label:o.dragHandle.label,className:_(se.dragHandle,h.dragHandle),disabled:u,context:d,validation:j}),!N&&!y&&t.createElement(b.combinatorSelector,{testID:ue.combinators,options:f,value:n,title:o.combinators.title,className:_(se.combinators,h.combinators),handleOnChange:F,rules:s,level:W,path:a,disabled:u,context:d,validation:j}),I&&t.createElement(b.notToggle,{testID:ue.notToggle,className:_(se.notToggle,h.notToggle),title:o.notToggle.title,label:o.notToggle.label,checked:p,handleOnChange:e=>{u||$("not",e,a)},level:W,disabled:u,path:a,context:d,validation:j}),t.createElement(b.addRuleAction,{testID:ue.addRule,label:o.addRule.label,title:o.addRule.title,className:_(se.addRule,h.addRule),handleOnClick:e=>{if(e.preventDefault(),e.stopPropagation(),!u){const e=m();O(e,a)}},rules:s,level:W,path:a,disabled:u,context:d,validation:j}),t.createElement(b.addGroupAction,{testID:ue.addGroup,label:o.addGroup.label,title:o.addGroup.title,className:_(se.addGroup,h.addGroup),handleOnClick:e=>{if(e.preventDefault(),e.stopPropagation(),!u){const e=g();v(e,a)}},rules:s,level:W,path:a,disabled:u,context:d,validation:j}),k&&a.length>=1&&t.createElement(b.cloneGroupAction,{testID:ue.cloneGroup,label:o.cloneRuleGroup.label,title:o.cloneRuleGroup.title,className:_(se.cloneGroup,h.cloneGroup),handleOnClick:e=>{if(e.preventDefault(),e.stopPropagation(),!u){const e=[...q(a),a[a.length-1]+1];R(a,e,!0)}},rules:s,level:W,path:a,disabled:u,context:d,validation:j}),a.length>=1&&t.createElement(b.removeGroupAction,{testID:ue.removeGroup,label:o.removeGroup.label,title:o.removeGroup.title,className:_(se.removeGroup,h.removeGroup),handleOnClick:e=>{e.preventDefault(),e.stopPropagation(),u||E(a)},rules:s,level:W,path:a,disabled:u,context:d,validation:j})),t.createElement("div",{className:_(se.body,h.body)},s.map(((r,i)=>{const l=a.concat([i]),p=u||C.some((e=>Q(l,e)));return t.createElement(e.exports.Fragment,{key:l.join("-")},i>0&&!y&&N&&t.createElement(Z,{options:f,value:n,title:o.combinators.title,className:_(se.combinators,h.combinators),handleOnChange:F,rules:s,level:W,context:d,validation:j,component:b.combinatorSelector,moveRule:R,path:l,disabled:p,independentCombinators:y}),"string"==typeof r?t.createElement(Z,{options:f,value:r,title:o.combinators.title,className:_(se.combinators,h.combinators),handleOnChange:e=>{return t=e,r=i,void(u||S(t,a.concat([r])));var t,r},rules:s,level:W,context:d,validation:j,component:b.combinatorSelector,moveRule:R,path:l,disabled:p,independentCombinators:y}):"rules"in r?t.createElement(b.ruleGroup,{id:r.id,schema:c,path:l,combinator:"combinator"in r?r.combinator:void 0,translations:o,rules:r.rules,disabled:p,not:!!r.not,context:d}):t.createElement(b.rule,{id:r.id,field:r.field,value:r.value,operator:r.operator,schema:c,path:l,disabled:p,translations:o,context:d}))}))))};ee.displayName="RuleGroup";const te=[{id:"~",name:"~",label:"------"}],re={fields:{title:"Fields"},operators:{title:"Operators"},value:{title:"Value"},removeRule:{label:"x",title:"Remove rule"},removeGroup:{label:"x",title:"Remove group"},addRule:{label:"+Rule",title:"Add rule"},addGroup:{label:"+Group",title:"Add group"},combinators:{title:"Combinators"},notToggle:{label:"Not",title:"Invert this group"},cloneRule:{label:"⧉",title:"Clone rule"},cloneRuleGroup:{label:"⧉",title:"Clone group"},dragHandle:{label:"⁞⁞",title:"Drag handle"}},ae=[{name:"=",label:"="},{name:"!=",label:"!="},{name:"<",label:"<"},{name:">",label:">"},{name:"<=",label:"<="},{name:">=",label:">="},{name:"contains",label:"contains"},{name:"beginsWith",label:"begins with"},{name:"endsWith",label:"ends with"},{name:"doesNotContain",label:"does not contain"},{name:"doesNotBeginWith",label:"does not begin with"},{name:"doesNotEndWith",label:"does not end with"},{name:"null",label:"is null"},{name:"notNull",label:"is not null"},{name:"in",label:"in"},{name:"notIn",label:"not in"},{name:"between",label:"between"},{name:"notBetween",label:"not between"}],ne=[{name:"and",label:"AND"},{name:"or",label:"OR"}],se={queryBuilder:"queryBuilder",ruleGroup:"ruleGroup",header:"ruleGroup-header",body:"ruleGroup-body",combinators:"ruleGroup-combinators",addRule:"ruleGroup-addRule",addGroup:"ruleGroup-addGroup",cloneRule:"rule-cloneRule",cloneGroup:"ruleGroup-cloneGroup",removeGroup:"ruleGroup-remove",notToggle:"ruleGroup-notToggle",rule:"rule",fields:"rule-fields",operators:"rule-operators",value:"rule-value",removeRule:"rule-remove",betweenRules:"betweenRules",valid:"queryBuilder-valid",invalid:"queryBuilder-invalid",dndDragging:"dndDragging",dndOver:"dndOver",dragHandle:"queryBuilder-dragHandle"},ie={queryBuilder:"",ruleGroup:"",header:"",body:"",combinators:"",addRule:"",addGroup:"",cloneRule:"",cloneGroup:"",removeGroup:"",notToggle:"",rule:"",fields:"",operators:"",value:"",removeRule:"",dragHandle:""},le={addGroupAction:v,removeGroupAction:v,cloneGroupAction:v,cloneRuleAction:v,addRuleAction:v,removeRuleAction:v,combinatorSelector:y,fieldSelector:y,operatorSelector:y,valueEditor:g,notToggle:E,ruleGroup:ee,rule:K,dragHandle:$},oe={empty:"empty",invalidCombinator:"invalid combinator",invalidIndependentCombinators:"invalid independent combinators"},ce={rule:"rule",ruleGroup:"ruleGroup"},ue={rule:"rule",ruleGroup:"rule-group",inlineCombinator:"inline-combinator",addGroup:"add-group",removeGroup:"remove-group",cloneGroup:"clone-group",cloneRule:"clone-rule",addRule:"add-rule",removeRule:"remove-rule",combinators:"combinators",fields:"fields",operators:"operators",valueEditor:"value-editor",notToggle:"not-toggle",dragHandle:"drag-handle"};r();const pe=e=>e.independentCombinators?de(m(b({},e),{independentCombinators:!0})):de(m(b({},e),{independentCombinators:!1})),de=({defaultQuery:r,query:i,fields:l=te,operators:o=ae,combinators:c=ne,translations:u=re,enableMountQueryChange:p=!0,controlElements:d,getDefaultField:h,getDefaultOperator:f,getDefaultValue:g,getOperators:y,getValueEditorType:v,getInputType:E,getValues:$,onAddRule:O=(e=>e),onAddGroup:N=(e=>e),onQueryChange:I=(()=>{}),controlClassnames:S,showCombinatorsBetweenRules:x=!1,showNotToggle:C=!1,showCloneButtons:A=!1,resetOnFieldChange:T=!0,resetOnOperatorChange:w=!1,autoSelectField:G=!0,addRuleToNewGroups:P=!1,enableDragAndDrop:B=!1,independentCombinators:H,disabled:U=!1,validator:M,context:F})=>{const W=e.exports.useMemo((()=>{let e=l;return G||(e=te.concat(l)),k(e)}),[G,l]),j=e.exports.useMemo((()=>{const e={};return W.forEach((t=>e[t.name]=t)),e}),[W]),z=e.exports.useMemo((()=>!0===U||Array.isArray(U)&&U.some((e=>0===e.length))),[U]),K=e.exports.useMemo((()=>Array.isArray(U)&&U||[]),[U]),Z=e.exports.useCallback((e=>{const t=j[e];if(null==t?void 0:t.operators)return t.operators;if(y){const t=y(e);if(t)return t}return o}),[j,y,o]),ee=e.exports.useCallback((e=>{var t;const r=j[e];if(null==r?void 0:r.defaultOperator)return r.defaultOperator;if(f)return"function"==typeof f?f(e):f;const a=null!=(t=Z(e))?t:[];return a.length?a[0].name:""}),[j,f,Z]),oe=e.exports.useCallback(((e,t)=>{if(v){const r=v(e,t);if(r)return r}return"text"}),[v]),ce=e.exports.useCallback(((e,t)=>{const r=j[e];if(null==r?void 0:r.values)return r.values;if($){const r=$(e,t);if(r)return r}return[]}),[j,$]),ue=e.exports.useCallback((e=>{const t=j[e.field];if(void 0!==(null==t?void 0:t.defaultValue)&&null!==t.defaultValue)return t.defaultValue;if(g)return g(e);let r="";const a=ce(e.field,e.operator);if(a.length)r=a[0].name;else{"checkbox"===oe(e.field,e.operator)&&(r=!1)}return r}),[j,g,oe,ce]),pe=e.exports.useCallback(((e,t)=>{if(E){const r=E(e,t);if(r)return r}return"text"}),[E]),de=e.exports.useCallback((()=>{let e="";(null==W?void 0:W.length)>0&&W[0]&&(e=W[0].name),h&&(e="function"==typeof h?h(W):h);const t=ee(e),r={id:`r-${L()}`,field:e,value:"",operator:t},a=ue(r);return m(b({},r),{value:a})}),[W,h,ee,ue]),he=e.exports.useCallback((()=>H?{id:`g-${L()}`,rules:P?[de()]:[],not:!1}:{id:`g-${L()}`,rules:P?[de()]:[],combinator:c[0].name,not:!1}),[P,c,de,H]),fe=e.exports.useRef(!0),[be,me]=e.exports.useState(null!=r?r:he()),ge=i?fe.current?X(i):i:be;fe.current=!1,e.exports.useEffect((()=>{p&&I(ge)}),[]);const ye=e=>{i||me(e),I(e)},ve=e=>{if(z)return;const t=q(e),r=e[e.length-1],a=s(ge,(e=>{const a=R(t,e);if(!("combinator"in a)&&a.rules.length>1){const e=0===r?0:r-1;a.rules.splice(e,2)}else a.rules.splice(r,1)}));ye(a)},Ee=e.exports.useMemo((()=>"function"==typeof M?M(ge):{}),[ge,M]),$e="object"==typeof Ee?Ee:{},_e={fields:W,fieldMap:j,combinators:c,classNames:b(b({},ie),S),createRule:de,createRuleGroup:he,onRuleAdd:(e,t)=>{if(z)return;const r=O(e,t,ge);if(!r)return;const a=s(ge,(e=>{const a=R(t,e);if("combinator"in a)a.rules.push(J(r));else{if(a.rules.length>0){const e=a.rules[a.rules.length-2];a.rules.push("string"==typeof e?e:"and")}a.rules.push(J(r))}}));ye(a)},onGroupAdd:(e,t)=>{if(z)return;const r=N(e,t,ge);if(!r)return;const a=s(ge,(e=>{const a=R(t,e);if("combinator"in a)a.rules.push(X(r));else if(!("combinator"in a)){if(a.rules.length>0){const e=a.rules[a.rules.length-2];a.rules.push("string"==typeof e?e:"and")}a.rules.push(X(r))}}));ye(a)},onRuleRemove:ve,onGroupRemove:ve,onPropChange:(e,t,r)=>{if(z)return;const a=s(ge,(a=>{const n=R(r,a);if(!n)return;const s="rules"in n;n[e]=t,s||(T&&"field"===e&&(n.operator=ee(t),n.value=ue(m(b({},n),{field:t}))),w&&"operator"===e&&(n.value=ue(m(b({},n),{operator:t}))))}));ye(a)},isRuleGroup:D,controls:b(b({},le),d),getOperators:Z,getValueEditorType:oe,getInputType:pe,getValues:ce,updateIndependentCombinator:(e,t)=>{if(z)return;const r=q(t),a=t[t.length-1],n=s(ge,(t=>{R(r,t).rules[a]=e}));ye(n)},moveRule:(e,t,r)=>{if(z||Q(e,t))return;const a=q(e),n=R(e,ge);if(!n)return;const i=r?"rules"in n?Y(n):V(n):n,l=((e,t)=>{const r=[],a=q(e),n=q(t);for(let s=0;s<a.length&&s<n.length&&a[s]===n[s];s++)r.push(n[s]);return r})(e,t),o=t[l.length]<=e[l.length],u=s(ge,(n=>{const s=R(a,n),u=e[e.length-1],p=H&&u>0?s.rules[u-1]:null,d=H&&u<s.rules.length-1?s.rules[u+1]:null;if(!r){const e=H?Math.max(0,u-1):u,t=H?2:1;s.rules.splice(e,t)}const h=[...t];o||r||(h[l.length]-=H?2:1);const f=q(h),b=R(f,n),m=h[h.length-1];if(0!==b.rules.length&&H)if(0===m)if(0===u&&d)b.rules.splice(m,0,i,d);else{const e=b.rules[1]||p||c[0].name;b.rules.splice(m,0,i,e)}else if(p)b.rules.splice(m,0,p,i);else{const e=b.rules[m-2]||d||c[0].name;b.rules.splice(m,0,e,i)}else b.rules.splice(m,0,i)}));ye(u)},showCombinatorsBetweenRules:x,showNotToggle:C,showCloneButtons:A,autoSelectField:G,addRuleToNewGroups:P,enableDragAndDrop:B,independentCombinators:!!H,validationMap:$e,disabledPaths:K},Oe=e.exports.useMemo((()=>_(se.queryBuilder,_e.classNames.queryBuilder,"boolean"==typeof Ee?Ee?se.valid:se.invalid:"")),[_e.classNames.queryBuilder,Ee]);return t.createElement(a,{backend:n},t.createElement("div",{className:Oe,"data-dnd":B?"enabled":"disabled","data-inlinecombinators":H||x?"enabled":"disabled"},t.createElement(_e.controls.ruleGroup,{translations:b(b({},re),u),rules:ge.rules,combinator:"combinator"in ge?ge.combinator:void 0,schema:_e,id:ge.id,path:[],not:!!ge.not,disabled:z,context:F})))};pe.displayName="QueryBuilder";export{pe as Q,O as d,T as f,L as g,j as p};
