{"version":3,"file":"ie11.273c6e75.js","sources":["../../src/ie11.tsx"],"sourcesContent":["import 'core-js';\nimport { useCallback, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport QueryBuilder, { defaultValidator } from 'react-querybuilder';\nimport {\n  CommonRQBProps,\n  defaultOptions,\n  DemoOptions,\n  docsLink,\n  fields,\n  initialQuery,\n  initialQueryIC,\n  optionsMetadata,\n} from './constants';\n\nconst IE11 = () => {\n  const [options, setOptions] = useState(defaultOptions);\n\n  const optionSetter = useCallback(\n    (opt: keyof DemoOptions) => (v: boolean) => setOptions(opts => ({ ...opts, [opt]: v })),\n    []\n  );\n\n  const optionsInfo = useMemo(\n    () =>\n      (\n        [\n          'showCombinatorsBetweenRules',\n          'showNotToggle',\n          'showCloneButtons',\n          'showLockButtons',\n          'resetOnFieldChange',\n          'resetOnOperatorChange',\n          'autoSelectField',\n          'addRuleToNewGroups',\n          'validateQuery',\n          'independentCombinators',\n          'enableDragAndDrop',\n          'disabled',\n        ] as (keyof DemoOptions)[]\n      ).map(opt => ({\n        ...optionsMetadata[opt],\n        default: defaultOptions[opt],\n        checked: options[opt],\n        setter: optionSetter(opt),\n      })),\n    [options, optionSetter]\n  );\n\n  const resetOptions = useCallback(\n    () =>\n      optionsInfo.forEach(opt => (opt.checked !== opt.default ? opt.setter(opt.default) : null)),\n    [optionsInfo]\n  );\n\n  const qbWrapperClassName = options.validateQuery ? 'validateQuery' : '';\n\n  const commonRQBProps = useMemo(\n    (): CommonRQBProps => ({\n      fields,\n      ...options,\n      validator: options.validateQuery ? defaultValidator : undefined,\n    }),\n    [options]\n  );\n\n  const getQBWrapperStyle = useCallback(\n    (icQueryBuilder: boolean) => ({\n      display: icQueryBuilder !== !!options.independentCombinators ? 'none' : 'block',\n    }),\n    [options.independentCombinators]\n  );\n\n  const qbClassname = commonRQBProps.enableDragAndDrop ? '' : 'dnd-disabled';\n\n  return (\n    <div>\n      <div className={qbWrapperClassName}>\n        <div style={getQBWrapperStyle(false)}>\n          <QueryBuilder\n            {...commonRQBProps}\n            independentCombinators={false}\n            defaultQuery={initialQuery}\n            controlClassnames={{\n              queryBuilder: qbClassname,\n            }}\n          />\n        </div>\n        <div style={getQBWrapperStyle(true)}>\n          <QueryBuilder {...commonRQBProps} independentCombinators defaultQuery={initialQueryIC} />\n        </div>\n      </div>\n      <div style={{ marginTop: '1rem' }}>\n        {optionsInfo.map(({ checked, label, link, setter, title }) => (\n          <div key={label}>\n            <label>\n              <input type=\"checkbox\" checked={checked} onChange={e => setter(e.target.checked)} />\n              {label}\n              {'\\u00a0'}\n              <a href={`${docsLink}${link}`} title={title} target=\"_blank\" rel=\"noreferrer\">\n                (?)\n              </a>\n            </label>\n          </div>\n        ))}\n        <button type=\"button\" style={{ marginTop: '0.5rem' }} onClick={resetOptions}>\n          Default options\n        </button>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<IE11 />, document.getElementById('ie11'));\n"],"names":["IE11","options","setOptions","useState","defaultOptions","optionSetter","useCallback","opt","v","opts","optionsInfo","useMemo","map","optionsMetadata","default","checked","setter","resetOptions","forEach","qbWrapperClassName","validateQuery","commonRQBProps","fields","validator","defaultValidator","getQBWrapperStyle","icQueryBuilder","display","independentCombinators","qbClassname","enableDragAndDrop","className","style","QueryBuilder","__spreadProps","defaultQuery","initialQuery","controlClassnames","queryBuilder","initialQueryIC","marginTop","label","link","title","key","type","onChange","e","target","href","docsLink","rel","onClick","ReactDOM","render","document","getElementById"],"mappings":"gqBAeA,MAAMA,EAAO,WACJC,EAASC,GAAcC,mBAASC,GAEjCC,EAAeC,uBAClBC,GAA4BC,GAAeN,aAAyBO,KAAOF,GAAMC,OAClF,IAGIE,EAAcC,mBAClB,IAEI,CACE,8BACA,gBACA,mBACA,kBACA,qBACA,wBACA,kBACA,qBACA,gBACA,yBACA,oBACA,YAEFC,eACGC,EAAgBN,KACnBO,QAASV,EAAeG,GACxBQ,QAASd,EAAQM,GACjBS,OAAQX,EAAaE,QAEzB,CAACN,EAASI,IAGNY,EAAeX,uBACnB,IACEI,EAAYQ,YAAgBX,EAAIQ,UAAYR,EAAIO,QAAUP,EAAIS,OAAOT,EAAIO,SAAW,QACtF,CAACJ,IAGGS,EAAqBlB,EAAQmB,cAAgB,gBAAkB,GAE/DC,EAAiBV,mBACrB,SACEW,OAAAA,GACGrB,IACHsB,UAAWtB,EAAQmB,cAAgBI,OAAmB,KAExD,CAACvB,IAGGwB,EAAoBnB,uBACvBoB,KACCC,QAASD,MAAqBzB,EAAQ2B,uBAAyB,OAAS,WAE1E,CAAC3B,EAAQ2B,yBAGLC,EAAcR,EAAeS,kBAAoB,GAAK,sCAGzD,MAAD,qBACG,MAAD,CAAKC,UAAWZ,mBACb,MAAD,CAAKa,MAAOP,GAAkB,oBAC3BQ,EAADC,OACMb,GADN,CAEEO,wBAAwB,EACxBO,aAAcC,EACdC,kBAAmB,CACjBC,aAAcT,uBAInB,MAAD,CAAKG,MAAOP,GAAkB,oBAC3BQ,EAADC,OAAkBb,GAAlB,CAAkCO,wBAAsB,EAACO,aAAcI,uBAG1E,MAAD,CAAKP,MAAO,CAAEQ,UAAW,SACtB9B,EAAYE,KAAI,EAAGG,QAAAA,EAAS0B,MAAAA,EAAOC,KAAAA,EAAM1B,OAAAA,EAAQ2B,MAAAA,qBAC/C,MAAD,CAAKC,IAAKH,mBACP,QAAD,qBACG,QAAD,CAAOI,KAAK,WAAW9B,QAAAA,EAAkB+B,YAAe9B,EAAO+B,EAAEC,OAAOjC,WACvE0B,EACA,oBACA,IAAD,CAAGQ,KAAM,GAAGC,IAAWR,IAAQC,MAAAA,EAAcK,OAAO,SAASG,IAAI,cAAa,2BAMnF,SAAD,CAAQN,KAAK,SAASb,MAAO,CAAEQ,UAAW,UAAYY,QAASnC,GAAc,sBAQrFoC,EAASC,uBAAQtD,EAAD,MAAUuD,SAASC,eAAe"}