{"version":3,"file":"ie11-legacy.2a23f62a.js","sources":["../../src/ie11.tsx"],"sourcesContent":["import 'core-js';\nimport { useCallback, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport QueryBuilder, { defaultValidator } from 'react-querybuilder';\nimport {\n  CommonRQBProps,\n  defaultOptions,\n  DemoOptions,\n  docsLink,\n  fields,\n  initialQuery,\n  initialQueryIC,\n  optionsMetadata,\n} from './constants';\n\nconst IE11 = () => {\n  const [options, setOptions] = useState(defaultOptions);\n\n  const optionSetter = useCallback(\n    (opt: keyof DemoOptions) => (v: boolean) => setOptions(opts => ({ ...opts, [opt]: v })),\n    []\n  );\n\n  const optionsInfo = useMemo(\n    () =>\n      (\n        [\n          'showCombinatorsBetweenRules',\n          'showNotToggle',\n          'showCloneButtons',\n          'showLockButtons',\n          'resetOnFieldChange',\n          'resetOnOperatorChange',\n          'autoSelectField',\n          'addRuleToNewGroups',\n          'validateQuery',\n          'independentCombinators',\n          'enableDragAndDrop',\n          'disabled',\n        ] as (keyof DemoOptions)[]\n      ).map(opt => ({\n        ...optionsMetadata[opt],\n        default: defaultOptions[opt],\n        checked: options[opt],\n        setter: optionSetter(opt),\n      })),\n    [options, optionSetter]\n  );\n\n  const resetOptions = useCallback(\n    () =>\n      optionsInfo.forEach(opt => (opt.checked !== opt.default ? opt.setter(opt.default) : null)),\n    [optionsInfo]\n  );\n\n  const qbWrapperClassName = options.validateQuery ? 'validateQuery' : '';\n\n  const commonRQBProps = useMemo(\n    (): CommonRQBProps => ({\n      fields,\n      ...options,\n      validator: options.validateQuery ? defaultValidator : undefined,\n    }),\n    [options]\n  );\n\n  const getQBWrapperStyle = useCallback(\n    (icQueryBuilder: boolean) => ({\n      display: icQueryBuilder !== !!options.independentCombinators ? 'none' : 'block',\n    }),\n    [options.independentCombinators]\n  );\n\n  const qbClassname = commonRQBProps.enableDragAndDrop ? '' : 'dnd-disabled';\n\n  return (\n    <div>\n      <div className={qbWrapperClassName}>\n        <div style={getQBWrapperStyle(false)}>\n          <QueryBuilder\n            {...commonRQBProps}\n            independentCombinators={false}\n            defaultQuery={initialQuery}\n            controlClassnames={{\n              queryBuilder: qbClassname,\n            }}\n          />\n        </div>\n        <div style={getQBWrapperStyle(true)}>\n          <QueryBuilder {...commonRQBProps} independentCombinators defaultQuery={initialQueryIC} />\n        </div>\n      </div>\n      <div style={{ marginTop: '1rem' }}>\n        {optionsInfo.map(({ checked, label, link, setter, title }) => (\n          <div key={label}>\n            <label>\n              <input type=\"checkbox\" checked={checked} onChange={e => setter(e.target.checked)} />\n              {label}\n              {'\\u00a0'}\n              <a href={`${docsLink}${link}`} title={title} target=\"_blank\" rel=\"noreferrer\">\n                (?)\n              </a>\n            </label>\n          </div>\n        ))}\n        <button type=\"button\" style={{ marginTop: '0.5rem' }} onClick={resetOptions}>\n          Default options\n        </button>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<IE11 />, document.getElementById('ie11'));\n"],"names":["IE11","_react$exports$useSta2","_slicedToArray","useState","exports","defaultOptions","options","setOptions","optionSetter","useCallback","opt","v","opts","_objectSpread","optionsInfo","useMemo","map","optionsMetadata","default","checked","setter","resetOptions","forEach","qbWrapperClassName","validateQuery","commonRQBProps","fields","validator","defaultValidator","getQBWrapperStyle","icQueryBuilder","display","independentCombinators","qbClassname","enableDragAndDrop","React","createElement","className","style","QueryBuilder","defaultQuery","initialQuery","controlClassnames","queryBuilder","initialQueryIC","marginTop","label","link","_ref","title","key","type","onChange","e","target","href","docsLink","rel","onClick","ReactDOM","render","document","getElementById"],"mappings":"m9IAeMA,EAAO,WACX,IAAAC,EAAAC,EAA8BC,EAAAC,QAAAD,SAASE,GAAvC,GAAOC,EAASC,EAAAA,GAAAA,OAEVC,EAAeC,EAAAA,QAAAA,aACnB,SAACC,GAA2B,OAAA,SAACC,GAAeJ,OAAAA,GAAW,SAASK,GAAT,OAAAC,EAAAA,EAAA,GAAcD,GAAOF,GAAAA,EAAAA,GAAAA,EAAMC,UAClF,IAGIG,EAAcC,EAAAA,QAAAA,SAClB,iBAEI,CACE,8BACA,gBACA,mBACA,kBACA,qBACA,wBACA,kBACA,qBACA,gBACA,yBACA,oBACA,YAEFC,KAAI,SAAQN,iBACTO,EAAgBP,IADf,GAAA,CAEJQ,QAASb,EAAeK,GACxBS,QAASb,EAAQI,GACjBU,OAAQZ,EAAaE,UAEzB,CAACJ,EAASE,IAGNa,EAAeZ,EACnBL,QAAAK,aAAA,WACEK,OAAAA,EAAYQ,SAAQ,SAAAZ,UAAQA,EAAIS,UAAYT,EAAIQ,QAAUR,EAAIU,OAAOV,EAAIQ,SAAW,UACtF,CAACJ,IAGGS,EAAqBjB,EAAQkB,cAAgB,gBAAkB,GAE/DC,EAAiBV,EAAAA,QAAAA,SACrB,WAAA,OAAAF,EAAAA,EAAA,CACEa,OAAAA,GACGpB,GAFL,GAAA,CAGEqB,UAAWrB,EAAQkB,cAAgBI,OAAmB,MAExD,CAACtB,IAGGuB,EAAoBpB,uBACxB,SAACqB,SAA6B,CAC5BC,QAASD,MAAqBxB,EAAQ0B,uBAAyB,OAAS,WAE1E,CAAC1B,EAAQ0B,yBAGLC,EAAcR,EAAeS,kBAAoB,GAAK,eAG1D,OAAAC,EAAAC,cAAC,WACED,EAAAC,cAAA,MAAA,CAAIC,UAAWd,GACbY,EAAAC,cAAA,MAAA,CAAIE,MAAOT,GAAkB,IAC3BM,EAAAC,cAAAG,EACKd,EAAAA,EAAAA,GAAAA,OACJO,wBAAwB,EACxBQ,aAAcC,EACdC,kBAAmB,CACjBC,aAAcV,OAInBE,EAAAC,cAAA,MAAA,CAAIE,MAAOT,GAAkB,IAC3BM,EAAAC,cAAAG,SAAiBd,GAAjBU,GAAAA,CAAiCH,wBAAsB,EAACQ,aAAcI,OAG1ET,EAAAC,cAAA,MAAA,CAAIE,MAAO,CAAEO,UAAW,SACtB/B,EAAYE,KAAI,gBAAGG,IAAAA,QAAS2B,EAAAA,EAAAA,MAAOC,EAAnBC,EAAmBD,KAAM3B,EAAAA,EAAAA,OAAQ6B,EAAjCD,EAAiCC,MAAA,OAC/Cd,EAAAC,cAAA,MAAA,CAAIc,IAAKJ,GACRX,EAAAC,cAAC,aACED,EAAAC,cAAA,QAAA,CAAMe,KAAK,WAAWhC,QAAAA,EAAkBiC,SAAU,SAAAC,UAAKjC,EAAOiC,EAAEC,OAAOnC,YACvE2B,EACA,IACAX,EAAAC,cAAA,IAAA,CAAEmB,KAASC,GAAAA,OAAAA,UAAWT,GAAQE,MAAAA,EAAcK,OAAO,SAASG,IAAI,cAAa,YAMnFtB,EAAAC,cAAA,SAAA,CAAOe,KAAK,SAASb,MAAO,CAAEO,UAAW,UAAYa,QAASrC,GAAc,sBAQrFsC,EAASC,OAAQzB,EAAAC,cAAApC,EAAA,MAAS6D,SAASC,eAAe"}